{"id":"reducers/generation.js","dependencies":[{"name":"c:\\Websites\\dragonstack\\frontend\\.babelrc","includedInParent":true,"mtime":1542838377096},{"name":"c:\\Websites\\dragonstack\\frontend\\package.json","includedInParent":true,"mtime":1544629013352},{"name":"../actions/types","loc":{"line":1,"column":27},"parent":"c:\\Websites\\dragonstack\\frontend\\src\\reducers\\generation.js","resolved":"c:\\Websites\\dragonstack\\frontend\\src\\actions\\types.js"},{"name":"./fetchStates","loc":{"line":2,"column":24},"parent":"c:\\Websites\\dragonstack\\frontend\\src\\reducers\\generation.js","resolved":"c:\\Websites\\dragonstack\\frontend\\src\\reducers\\fetchStates.js"},{"name":"../actions/generation","loc":{"line":3,"column":32},"parent":"c:\\Websites\\dragonstack\\frontend\\src\\reducers\\generation.js","resolved":"c:\\Websites\\dragonstack\\frontend\\src\\actions\\generation.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _types = require(\"../actions/types\");\n\nvar _fetchStates = _interopRequireDefault(require(\"./fetchStates\"));\n\nvar _generation = require(\"../actions/generation\");\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar DEFAULT_GENERATION = {\n  generationId: '',\n  expiration: ''\n};\n\nvar generationReducer = function generationReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DEFAULT_GENERATION;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case _types.GENERATION.FETCH:\n      return _extends({}, state, {\n        status: _fetchStates.default.fetching\n      });\n\n    case _types.GENERATION.FETCH_ERROR:\n      return _extends({}, state, {\n        status: _fetchStates.default.error,\n        message: action.message\n      });\n    //message key added to the state to see the error contained in action.message\n\n    case _types.GENERATION.FETCH_SUCCESS:\n      return _extends({}, state, {\n        status: _fetchStates.default.success\n      }, action.generation);\n    //we want the new generation in the generation object\n\n    default:\n      return state;\n    //current state\n  }\n};\n\nvar _default = generationReducer;\nexports.default = _default;","map":{"mappings":[{"generated":{"line":8,"column":0},"source":"reducers/generation.js","original":{"line":1,"column":0}},{"generated":{"line":10,"column":0},"source":"reducers/generation.js","original":{"line":2,"column":0}},{"generated":{"line":12,"column":0},"source":"reducers/generation.js","original":{"line":3,"column":0}},{"generated":{"line":18,"column":0},"source":"reducers/generation.js","original":{"line":4,"column":0}},{"name":"DEFAULT_GENERATION","generated":{"line":18,"column":4},"source":"reducers/generation.js","original":{"line":4,"column":6}},{"generated":{"line":18,"column":22},"source":"reducers/generation.js","original":{"line":4,"column":24}},{"generated":{"line":18,"column":25},"source":"reducers/generation.js","original":{"line":4,"column":27}},{"name":"generationId","generated":{"line":19,"column":0},"source":"reducers/generation.js","original":{"line":4,"column":29}},{"name":"generationId","generated":{"line":19,"column":2},"source":"reducers/generation.js","original":{"line":4,"column":29}},{"generated":{"line":19,"column":14},"source":"reducers/generation.js","original":{"line":4,"column":41}},{"generated":{"line":19,"column":16},"source":"reducers/generation.js","original":{"line":4,"column":43}},{"generated":{"line":19,"column":18},"source":"reducers/generation.js","original":{"line":4,"column":27}},{"name":"expiration","generated":{"line":20,"column":0},"source":"reducers/generation.js","original":{"line":4,"column":47}},{"name":"expiration","generated":{"line":20,"column":2},"source":"reducers/generation.js","original":{"line":4,"column":47}},{"generated":{"line":20,"column":12},"source":"reducers/generation.js","original":{"line":4,"column":57}},{"generated":{"line":20,"column":14},"source":"reducers/generation.js","original":{"line":4,"column":59}},{"generated":{"line":21,"column":0},"source":"reducers/generation.js","original":{"line":4,"column":27}},{"generated":{"line":21,"column":1},"source":"reducers/generation.js","original":{"line":4,"column":0}},{"generated":{"line":23,"column":0},"source":"reducers/generation.js","original":{"line":6,"column":0}},{"name":"generationReducer","generated":{"line":23,"column":4},"source":"reducers/generation.js","original":{"line":6,"column":6}},{"generated":{"line":23,"column":21},"source":"reducers/generation.js","original":{"line":6,"column":23}},{"generated":{"line":23,"column":24},"source":"reducers/generation.js","original":{"line":6,"column":26}},{"name":"generationReducer","generated":{"line":23,"column":33},"source":"reducers/generation.js","original":{"line":6,"column":6}},{"generated":{"line":23,"column":50},"source":"reducers/generation.js","original":{"line":6,"column":26}},{"generated":{"line":23,"column":53},"source":"reducers/generation.js","original":{"line":6,"column":63}},{"generated":{"line":24,"column":0},"source":"reducers/generation.js","original":{"line":6,"column":63}},{"name":"state","generated":{"line":24,"column":6},"source":"reducers/generation.js","original":{"line":6,"column":27}},{"generated":{"line":24,"column":11},"source":"reducers/generation.js","original":{"line":6,"column":63}},{"name":"DEFAULT_GENERATION","generated":{"line":24,"column":82},"source":"reducers/generation.js","original":{"line":6,"column":33}},{"generated":{"line":24,"column":100},"source":"reducers/generation.js","original":{"line":6,"column":63}},{"generated":{"line":25,"column":0},"source":"reducers/generation.js","original":{"line":6,"column":63}},{"name":"action","generated":{"line":25,"column":6},"source":"reducers/generation.js","original":{"line":6,"column":52}},{"generated":{"line":25,"column":12},"source":"reducers/generation.js","original":{"line":6,"column":63}},{"generated":{"line":27,"column":0},"source":"reducers/generation.js","original":{"line":7,"column":2}},{"name":"action","generated":{"line":27,"column":10},"source":"reducers/generation.js","original":{"line":7,"column":10}},{"generated":{"line":27,"column":16},"source":"reducers/generation.js","original":{"line":7,"column":16}},{"name":"type","generated":{"line":27,"column":17},"source":"reducers/generation.js","original":{"line":7,"column":17}},{"generated":{"line":27,"column":21},"source":"reducers/generation.js","original":{"line":7,"column":2}},{"generated":{"line":28,"column":0},"source":"reducers/generation.js","original":{"line":8,"column":4}},{"name":"GENERATION","generated":{"line":28,"column":9},"source":"reducers/generation.js","original":{"line":8,"column":9}},{"name":"FETCH","generated":{"line":28,"column":27},"source":"reducers/generation.js","original":{"line":8,"column":20}},{"generated":{"line":28,"column":32},"source":"reducers/generation.js","original":{"line":8,"column":4}},{"generated":{"line":29,"column":0},"source":"reducers/generation.js","original":{"line":9,"column":6}},{"name":"state","generated":{"line":29,"column":26},"source":"reducers/generation.js","original":{"line":9,"column":18}},{"generated":{"line":29,"column":31},"source":"reducers/generation.js","original":{"line":9,"column":6}},{"name":"status","generated":{"line":30,"column":0},"source":"reducers/generation.js","original":{"line":9,"column":25}},{"name":"status","generated":{"line":30,"column":8},"source":"reducers/generation.js","original":{"line":9,"column":25}},{"generated":{"line":30,"column":14},"source":"reducers/generation.js","original":{"line":9,"column":31}},{"name":"fetchStates","generated":{"line":30,"column":16},"source":"reducers/generation.js","original":{"line":9,"column":32}},{"name":"fetching","generated":{"line":30,"column":37},"source":"reducers/generation.js","original":{"line":9,"column":44}},{"generated":{"line":31,"column":0},"source":"reducers/generation.js","original":{"line":9,"column":6}},{"generated":{"line":33,"column":0},"source":"reducers/generation.js","original":{"line":10,"column":4}},{"name":"GENERATION","generated":{"line":33,"column":9},"source":"reducers/generation.js","original":{"line":10,"column":9}},{"name":"FETCH_ERROR","generated":{"line":33,"column":27},"source":"reducers/generation.js","original":{"line":10,"column":20}},{"generated":{"line":33,"column":38},"source":"reducers/generation.js","original":{"line":10,"column":4}},{"generated":{"line":34,"column":0},"source":"reducers/generation.js","original":{"line":11,"column":6}},{"name":"state","generated":{"line":34,"column":26},"source":"reducers/generation.js","original":{"line":11,"column":18}},{"generated":{"line":34,"column":31},"source":"reducers/generation.js","original":{"line":11,"column":6}},{"name":"status","generated":{"line":35,"column":0},"source":"reducers/generation.js","original":{"line":11,"column":25}},{"name":"status","generated":{"line":35,"column":8},"source":"reducers/generation.js","original":{"line":11,"column":25}},{"generated":{"line":35,"column":14},"source":"reducers/generation.js","original":{"line":11,"column":31}},{"name":"fetchStates","generated":{"line":35,"column":16},"source":"reducers/generation.js","original":{"line":11,"column":32}},{"name":"error","generated":{"line":35,"column":37},"source":"reducers/generation.js","original":{"line":11,"column":44}},{"generated":{"line":35,"column":42},"source":"reducers/generation.js","original":{"line":11,"column":6}},{"name":"message","generated":{"line":36,"column":0},"source":"reducers/generation.js","original":{"line":11,"column":51}},{"name":"message","generated":{"line":36,"column":8},"source":"reducers/generation.js","original":{"line":11,"column":51}},{"generated":{"line":36,"column":15},"source":"reducers/generation.js","original":{"line":11,"column":58}},{"name":"action","generated":{"line":36,"column":17},"source":"reducers/generation.js","original":{"line":11,"column":60}},{"generated":{"line":36,"column":23},"source":"reducers/generation.js","original":{"line":11,"column":66}},{"name":"message","generated":{"line":36,"column":24},"source":"reducers/generation.js","original":{"line":11,"column":67}},{"generated":{"line":37,"column":0},"source":"reducers/generation.js","original":{"line":11,"column":6}},{"generated":{"line":38,"column":0},"source":"reducers/generation.js","original":{"line":11,"column":79}},{"generated":{"line":40,"column":0},"source":"reducers/generation.js","original":{"line":12,"column":4}},{"name":"GENERATION","generated":{"line":40,"column":9},"source":"reducers/generation.js","original":{"line":12,"column":9}},{"name":"FETCH_SUCCESS","generated":{"line":40,"column":27},"source":"reducers/generation.js","original":{"line":12,"column":20}},{"generated":{"line":40,"column":40},"source":"reducers/generation.js","original":{"line":12,"column":4}},{"generated":{"line":41,"column":0},"source":"reducers/generation.js","original":{"line":13,"column":6}},{"name":"state","generated":{"line":41,"column":26},"source":"reducers/generation.js","original":{"line":13,"column":18}},{"generated":{"line":41,"column":31},"source":"reducers/generation.js","original":{"line":13,"column":6}},{"name":"status","generated":{"line":42,"column":0},"source":"reducers/generation.js","original":{"line":13,"column":25}},{"name":"status","generated":{"line":42,"column":8},"source":"reducers/generation.js","original":{"line":13,"column":25}},{"generated":{"line":42,"column":14},"source":"reducers/generation.js","original":{"line":13,"column":31}},{"name":"fetchStates","generated":{"line":42,"column":16},"source":"reducers/generation.js","original":{"line":13,"column":32}},{"name":"success","generated":{"line":42,"column":37},"source":"reducers/generation.js","original":{"line":13,"column":44}},{"generated":{"line":43,"column":0},"source":"reducers/generation.js","original":{"line":13,"column":6}},{"name":"action","generated":{"line":43,"column":9},"source":"reducers/generation.js","original":{"line":13,"column":56}},{"generated":{"line":43,"column":15},"source":"reducers/generation.js","original":{"line":13,"column":62}},{"name":"generation","generated":{"line":43,"column":16},"source":"reducers/generation.js","original":{"line":13,"column":63}},{"generated":{"line":43,"column":26},"source":"reducers/generation.js","original":{"line":13,"column":6}},{"generated":{"line":44,"column":0},"source":"reducers/generation.js","original":{"line":13,"column":79}},{"generated":{"line":46,"column":0},"source":"reducers/generation.js","original":{"line":14,"column":4}},{"generated":{"line":47,"column":0},"source":"reducers/generation.js","original":{"line":15,"column":6}},{"name":"state","generated":{"line":47,"column":13},"source":"reducers/generation.js","original":{"line":15,"column":13}},{"generated":{"line":47,"column":18},"source":"reducers/generation.js","original":{"line":15,"column":6}},{"generated":{"line":48,"column":0},"source":"reducers/generation.js","original":{"line":15,"column":20}},{"generated":{"line":49,"column":0},"source":"reducers/generation.js","original":{"line":7,"column":2}},{"generated":{"line":50,"column":0},"source":"reducers/generation.js","original":{"line":17,"column":2}},{"generated":{"line":50,"column":1},"source":"reducers/generation.js","original":{"line":6,"column":0}},{"name":"generationReducer","generated":{"line":52,"column":15},"source":"reducers/generation.js","original":{"line":19,"column":15}}],"sources":{"reducers/generation.js":"import { GENERATION } from '../actions/types';\r\nimport fetchStates from './fetchStates';\r\nimport { fetchGeneration } from '../actions/generation';\r\nconst DEFAULT_GENERATION = { generationId: '', expiration: '' };\r\n\r\nconst generationReducer = (state=DEFAULT_GENERATION,action) => {\r\n  switch (action.type) {\r\n    case GENERATION.FETCH:\r\n      return { ...state, status:fetchStates.fetching };\r\n    case GENERATION.FETCH_ERROR:\r\n      return { ...state, status:fetchStates.error, message: action.message };  //message key added to the state to see the error contained in action.message\r\n    case GENERATION.FETCH_SUCCESS:\r\n      return { ...state, status:fetchStates.success, ...action.generation };   //we want the new generation in the generation object\r\n    default:\r\n      return state; //current state\r\n  }\r\n }\r\n\r\nexport default generationReducer;"},"lineCount":null}},"hash":"256f94b2a507aca3797d3a864c2ac658","cacheData":{"env":{}}}